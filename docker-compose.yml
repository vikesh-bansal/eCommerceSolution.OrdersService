version: '3.4'

services:
  ordersmicroservice.api:
    image: ordersmicroserviceapi
    build:
      context: .
      dockerfile: OrdersMicroservice.API/Dockerfile
    environment:
     - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
     - MONGODB_HOST=mongodb-container
     - MONGODB_PORT=27017
     - MONGODB_DATABASE=OrdersDatabase
     - UsersMicroserviceName=users-microservice
     - UsersMicroservicePort=9090
     - ProductsMicroserviceName=products-microservice
     - ProductsMicroservicePort=8080
     - REDIS_HOST=redis
     - REDIS_PORT=6379 
    ports:
     - "7000:8080"
    networks:
     - orders-mongodb-network
     - ecommerce-network
    depends_on:
      - mongodb-container
  mongodb-container:
     image: mongo:latest
     ports:
        - "27017:27017"
     volumes:
        - ../mongodb-init:/docker-entrypoint-initdb.d
     networks:
        - orders-mongodb-network
  
  products-microservice:
   image: products-microservice:latest
   environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
    - MYSQL_HOST=mysql-container
    - MYSQL_PORT=3306
    - MYSQL_DATABASE=ecommerceproductsdatabase
    - MYSQL_USER=root
    - MYSQL_PASSWORD=admin
   ports:
   - "6000:8080"
   networks:
    - products-mysql-network
    - ecommerce-network
   depends_on:
    - mysql-container

  mysql-container:
    image: mysql:8.0
    environment:
     - MYSQL_ROOT_PASSWORD=admin
    ports:
     - "3307:3306"
    volumes:
     - ../mysql-init:/docker-entrypoint-initdb.d
    networks:
     - products-mysql-network
 
  users-microservice:
   image: users-microservice:latest
   environment:
    - ASPNETCORE_HTTP_PORTS=8080
    - ASPNETCORE_HTTP_ENVIRONMENT=Development 
    - POSTGRES_HOST=postgres-container
    - POSTGRES_PASSWORD=admin
    - POSTGRES_DATABASE=eCommerceUsers
    - POSTGRES_USER=postgres
    - POSTGRES_PORT=5432
   networks:
    - users-postgres-network
    - ecommerce-network
   ports: 
    - "5000:9090"
   depends_on:
     - postgres-container

  postgres-container:
    image: postgres:18.0
    environment:      
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=admin
     - POSTGRES_DB=eCommerceUsers
    ports:
     - "5433:5432"
    networks:
     - users-postgres-network
    volumes:
     - ../postgres-init:/docker-entrypoint-initdb.d
   
  redis:
     image: redis:latest
     ports:
      - "6379:6379"
     volumes:
      - G:/Microservices/redis-cache:/data
     networks:
      - ecommerce-network

  apigateway:
    image: apigateway
    build:
     context: .
     dockerfile: ApiGateway/Dockerfile
    ports:
     - "4000:8080"
    networks:
      - ecommerce-network

networks:
  orders-mongodb-network:
   driver: bridge
  products-mysql-network:
   driver: bridge
  users-postgres-network:
   driver: bridge
  ecommerce-network:
    driver: bridge
   
    


